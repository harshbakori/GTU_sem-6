<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>